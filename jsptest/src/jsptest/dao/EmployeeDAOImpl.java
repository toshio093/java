package jsptest.dao;

import com.ibatis.dao.client.DaoManager;
import com.ibatis.dao.client.template.SqlMapDaoTemplate;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class EmployeeDAOImpl extends SqlMapDaoTemplate implements EmployeeDAO {

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table employee
     *
     * @abatorgenerated Mon Oct 13 14:44:28 JST 2014
     */
    public EmployeeDAOImpl(DaoManager daoManager) {
        super(daoManager);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table employee
     *
     * @abatorgenerated Mon Oct 13 14:44:28 JST 2014
     */
    public void insert(Employee record) {
        insert("employee.abatorgenerated_insert", record);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table employee
     *
     * @abatorgenerated Mon Oct 13 14:44:28 JST 2014
     */
    public int updateByPrimaryKey(Employee record) {
        int rows = update("employee.abatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table employee
     *
     * @abatorgenerated Mon Oct 13 14:44:28 JST 2014
     */
    public int updateByPrimaryKeySelective(Employee record) {
        int rows = update("employee.abatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table employee
     *
     * @abatorgenerated Mon Oct 13 14:44:28 JST 2014
     */
    public List selectByExample(EmployeeExample example, String orderByClause) {
        Map parms = getExampleParms(example);
        if (orderByClause != null) {
            parms.put("ABATOR_ORDER_BY_CLAUSE", orderByClause);
        }
        List list = queryForList("employee.abatorgenerated_selectByExample", parms);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table employee
     *
     * @abatorgenerated Mon Oct 13 14:44:28 JST 2014
     */
    public List selectByExample(EmployeeExample example) {
        return selectByExample(example, null);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table employee
     *
     * @abatorgenerated Mon Oct 13 14:44:28 JST 2014
     */
    public Employee selectByPrimaryKey(String id) {
        Employee key = new Employee();
        key.setId(id);
        Employee record = (Employee) queryForObject("employee.abatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table employee
     *
     * @abatorgenerated Mon Oct 13 14:44:28 JST 2014
     */
    public int deleteByExample(EmployeeExample example) {
        int rows = delete("employee.abatorgenerated_deleteByExample", getExampleParms(example));
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table employee
     *
     * @abatorgenerated Mon Oct 13 14:44:28 JST 2014
     */
    public int deleteByPrimaryKey(String id) {
        Employee key = new Employee();
        key.setId(id);
        int rows = delete("employee.abatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table employee
     *
     * @abatorgenerated Mon Oct 13 14:44:28 JST 2014
     */
    private Map getidExampleParms(EmployeeExample example) {
        Map parms = new HashMap();
        switch (example.getId_Indicator()) {
        case EmployeeExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_id_NULL", "Y");
            } else {
                parms.put("AND_id_NULL", "Y");
            }
            break;
        case EmployeeExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_id_NOT_NULL", "Y");
            } else {
                parms.put("AND_id_NOT_NULL", "Y");
            }
            break;
        case EmployeeExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_id_EQUALS", "Y");
            } else {
                parms.put("AND_id_EQUALS", "Y");
            }
            parms.put("id", example.getId());
            break;
        case EmployeeExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_id_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_id_NOT_EQUALS", "Y");
            }
            parms.put("id", example.getId());
            break;
        case EmployeeExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_id_GT", "Y");
            } else {
                parms.put("AND_id_GT", "Y");
            }
            parms.put("id", example.getId());
            break;
        case EmployeeExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_id_GE", "Y");
            } else {
                parms.put("AND_id_GE", "Y");
            }
            parms.put("id", example.getId());
            break;
        case EmployeeExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_id_LT", "Y");
            } else {
                parms.put("AND_id_LT", "Y");
            }
            parms.put("id", example.getId());
            break;
        case EmployeeExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_id_LE", "Y");
            } else {
                parms.put("AND_id_LE", "Y");
            }
            parms.put("id", example.getId());
            break;
        case EmployeeExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_id_LIKE", "Y");
            } else {
                parms.put("AND_id_LIKE", "Y");
            }
            parms.put("id", example.getId());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table employee
     *
     * @abatorgenerated Mon Oct 13 14:44:28 JST 2014
     */
    private Map getnameExampleParms(EmployeeExample example) {
        Map parms = new HashMap();
        switch (example.getName_Indicator()) {
        case EmployeeExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_name_NULL", "Y");
            } else {
                parms.put("AND_name_NULL", "Y");
            }
            break;
        case EmployeeExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_name_NOT_NULL", "Y");
            } else {
                parms.put("AND_name_NOT_NULL", "Y");
            }
            break;
        case EmployeeExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_name_EQUALS", "Y");
            } else {
                parms.put("AND_name_EQUALS", "Y");
            }
            parms.put("name", example.getName());
            break;
        case EmployeeExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_name_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_name_NOT_EQUALS", "Y");
            }
            parms.put("name", example.getName());
            break;
        case EmployeeExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_name_GT", "Y");
            } else {
                parms.put("AND_name_GT", "Y");
            }
            parms.put("name", example.getName());
            break;
        case EmployeeExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_name_GE", "Y");
            } else {
                parms.put("AND_name_GE", "Y");
            }
            parms.put("name", example.getName());
            break;
        case EmployeeExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_name_LT", "Y");
            } else {
                parms.put("AND_name_LT", "Y");
            }
            parms.put("name", example.getName());
            break;
        case EmployeeExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_name_LE", "Y");
            } else {
                parms.put("AND_name_LE", "Y");
            }
            parms.put("name", example.getName());
            break;
        case EmployeeExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_name_LIKE", "Y");
            } else {
                parms.put("AND_name_LIKE", "Y");
            }
            parms.put("name", example.getName());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table employee
     *
     * @abatorgenerated Mon Oct 13 14:44:28 JST 2014
     */
    private Map getdeptcodeExampleParms(EmployeeExample example) {
        Map parms = new HashMap();
        switch (example.getDeptcode_Indicator()) {
        case EmployeeExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptcode_NULL", "Y");
            } else {
                parms.put("AND_deptcode_NULL", "Y");
            }
            break;
        case EmployeeExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptcode_NOT_NULL", "Y");
            } else {
                parms.put("AND_deptcode_NOT_NULL", "Y");
            }
            break;
        case EmployeeExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptcode_EQUALS", "Y");
            } else {
                parms.put("AND_deptcode_EQUALS", "Y");
            }
            parms.put("deptcode", example.getDeptcode());
            break;
        case EmployeeExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptcode_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_deptcode_NOT_EQUALS", "Y");
            }
            parms.put("deptcode", example.getDeptcode());
            break;
        case EmployeeExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptcode_GT", "Y");
            } else {
                parms.put("AND_deptcode_GT", "Y");
            }
            parms.put("deptcode", example.getDeptcode());
            break;
        case EmployeeExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptcode_GE", "Y");
            } else {
                parms.put("AND_deptcode_GE", "Y");
            }
            parms.put("deptcode", example.getDeptcode());
            break;
        case EmployeeExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptcode_LT", "Y");
            } else {
                parms.put("AND_deptcode_LT", "Y");
            }
            parms.put("deptcode", example.getDeptcode());
            break;
        case EmployeeExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptcode_LE", "Y");
            } else {
                parms.put("AND_deptcode_LE", "Y");
            }
            parms.put("deptcode", example.getDeptcode());
            break;
        case EmployeeExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptcode_LIKE", "Y");
            } else {
                parms.put("AND_deptcode_LIKE", "Y");
            }
            parms.put("deptcode", example.getDeptcode());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table employee
     *
     * @abatorgenerated Mon Oct 13 14:44:28 JST 2014
     */
    private Map getdeptnameExampleParms(EmployeeExample example) {
        Map parms = new HashMap();
        switch (example.getDeptname_Indicator()) {
        case EmployeeExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptname_NULL", "Y");
            } else {
                parms.put("AND_deptname_NULL", "Y");
            }
            break;
        case EmployeeExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptname_NOT_NULL", "Y");
            } else {
                parms.put("AND_deptname_NOT_NULL", "Y");
            }
            break;
        case EmployeeExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptname_EQUALS", "Y");
            } else {
                parms.put("AND_deptname_EQUALS", "Y");
            }
            parms.put("deptname", example.getDeptname());
            break;
        case EmployeeExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptname_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_deptname_NOT_EQUALS", "Y");
            }
            parms.put("deptname", example.getDeptname());
            break;
        case EmployeeExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptname_GT", "Y");
            } else {
                parms.put("AND_deptname_GT", "Y");
            }
            parms.put("deptname", example.getDeptname());
            break;
        case EmployeeExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptname_GE", "Y");
            } else {
                parms.put("AND_deptname_GE", "Y");
            }
            parms.put("deptname", example.getDeptname());
            break;
        case EmployeeExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptname_LT", "Y");
            } else {
                parms.put("AND_deptname_LT", "Y");
            }
            parms.put("deptname", example.getDeptname());
            break;
        case EmployeeExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptname_LE", "Y");
            } else {
                parms.put("AND_deptname_LE", "Y");
            }
            parms.put("deptname", example.getDeptname());
            break;
        case EmployeeExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptname_LIKE", "Y");
            } else {
                parms.put("AND_deptname_LIKE", "Y");
            }
            parms.put("deptname", example.getDeptname());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table employee
     *
     * @abatorgenerated Mon Oct 13 14:44:28 JST 2014
     */
    private Map getunitcodeExampleParms(EmployeeExample example) {
        Map parms = new HashMap();
        switch (example.getUnitcode_Indicator()) {
        case EmployeeExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_unitcode_NULL", "Y");
            } else {
                parms.put("AND_unitcode_NULL", "Y");
            }
            break;
        case EmployeeExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_unitcode_NOT_NULL", "Y");
            } else {
                parms.put("AND_unitcode_NOT_NULL", "Y");
            }
            break;
        case EmployeeExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_unitcode_EQUALS", "Y");
            } else {
                parms.put("AND_unitcode_EQUALS", "Y");
            }
            parms.put("unitcode", example.getUnitcode());
            break;
        case EmployeeExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_unitcode_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_unitcode_NOT_EQUALS", "Y");
            }
            parms.put("unitcode", example.getUnitcode());
            break;
        case EmployeeExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_unitcode_GT", "Y");
            } else {
                parms.put("AND_unitcode_GT", "Y");
            }
            parms.put("unitcode", example.getUnitcode());
            break;
        case EmployeeExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_unitcode_GE", "Y");
            } else {
                parms.put("AND_unitcode_GE", "Y");
            }
            parms.put("unitcode", example.getUnitcode());
            break;
        case EmployeeExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_unitcode_LT", "Y");
            } else {
                parms.put("AND_unitcode_LT", "Y");
            }
            parms.put("unitcode", example.getUnitcode());
            break;
        case EmployeeExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_unitcode_LE", "Y");
            } else {
                parms.put("AND_unitcode_LE", "Y");
            }
            parms.put("unitcode", example.getUnitcode());
            break;
        case EmployeeExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_unitcode_LIKE", "Y");
            } else {
                parms.put("AND_unitcode_LIKE", "Y");
            }
            parms.put("unitcode", example.getUnitcode());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table employee
     *
     * @abatorgenerated Mon Oct 13 14:44:28 JST 2014
     */
    private Map getunitnameExampleParms(EmployeeExample example) {
        Map parms = new HashMap();
        switch (example.getUnitname_Indicator()) {
        case EmployeeExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_unitname_NULL", "Y");
            } else {
                parms.put("AND_unitname_NULL", "Y");
            }
            break;
        case EmployeeExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_unitname_NOT_NULL", "Y");
            } else {
                parms.put("AND_unitname_NOT_NULL", "Y");
            }
            break;
        case EmployeeExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_unitname_EQUALS", "Y");
            } else {
                parms.put("AND_unitname_EQUALS", "Y");
            }
            parms.put("unitname", example.getUnitname());
            break;
        case EmployeeExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_unitname_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_unitname_NOT_EQUALS", "Y");
            }
            parms.put("unitname", example.getUnitname());
            break;
        case EmployeeExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_unitname_GT", "Y");
            } else {
                parms.put("AND_unitname_GT", "Y");
            }
            parms.put("unitname", example.getUnitname());
            break;
        case EmployeeExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_unitname_GE", "Y");
            } else {
                parms.put("AND_unitname_GE", "Y");
            }
            parms.put("unitname", example.getUnitname());
            break;
        case EmployeeExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_unitname_LT", "Y");
            } else {
                parms.put("AND_unitname_LT", "Y");
            }
            parms.put("unitname", example.getUnitname());
            break;
        case EmployeeExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_unitname_LE", "Y");
            } else {
                parms.put("AND_unitname_LE", "Y");
            }
            parms.put("unitname", example.getUnitname());
            break;
        case EmployeeExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_unitname_LIKE", "Y");
            } else {
                parms.put("AND_unitname_LIKE", "Y");
            }
            parms.put("unitname", example.getUnitname());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table employee
     *
     * @abatorgenerated Mon Oct 13 14:44:28 JST 2014
     */
    private Map getpstncodeExampleParms(EmployeeExample example) {
        Map parms = new HashMap();
        switch (example.getPstncode_Indicator()) {
        case EmployeeExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_pstncode_NULL", "Y");
            } else {
                parms.put("AND_pstncode_NULL", "Y");
            }
            break;
        case EmployeeExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_pstncode_NOT_NULL", "Y");
            } else {
                parms.put("AND_pstncode_NOT_NULL", "Y");
            }
            break;
        case EmployeeExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_pstncode_EQUALS", "Y");
            } else {
                parms.put("AND_pstncode_EQUALS", "Y");
            }
            parms.put("pstncode", example.getPstncode());
            break;
        case EmployeeExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_pstncode_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_pstncode_NOT_EQUALS", "Y");
            }
            parms.put("pstncode", example.getPstncode());
            break;
        case EmployeeExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_pstncode_GT", "Y");
            } else {
                parms.put("AND_pstncode_GT", "Y");
            }
            parms.put("pstncode", example.getPstncode());
            break;
        case EmployeeExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_pstncode_GE", "Y");
            } else {
                parms.put("AND_pstncode_GE", "Y");
            }
            parms.put("pstncode", example.getPstncode());
            break;
        case EmployeeExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_pstncode_LT", "Y");
            } else {
                parms.put("AND_pstncode_LT", "Y");
            }
            parms.put("pstncode", example.getPstncode());
            break;
        case EmployeeExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_pstncode_LE", "Y");
            } else {
                parms.put("AND_pstncode_LE", "Y");
            }
            parms.put("pstncode", example.getPstncode());
            break;
        case EmployeeExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_pstncode_LIKE", "Y");
            } else {
                parms.put("AND_pstncode_LIKE", "Y");
            }
            parms.put("pstncode", example.getPstncode());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table employee
     *
     * @abatorgenerated Mon Oct 13 14:44:28 JST 2014
     */
    private Map getpstnnameExampleParms(EmployeeExample example) {
        Map parms = new HashMap();
        switch (example.getPstnname_Indicator()) {
        case EmployeeExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_pstnname_NULL", "Y");
            } else {
                parms.put("AND_pstnname_NULL", "Y");
            }
            break;
        case EmployeeExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_pstnname_NOT_NULL", "Y");
            } else {
                parms.put("AND_pstnname_NOT_NULL", "Y");
            }
            break;
        case EmployeeExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_pstnname_EQUALS", "Y");
            } else {
                parms.put("AND_pstnname_EQUALS", "Y");
            }
            parms.put("pstnname", example.getPstnname());
            break;
        case EmployeeExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_pstnname_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_pstnname_NOT_EQUALS", "Y");
            }
            parms.put("pstnname", example.getPstnname());
            break;
        case EmployeeExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_pstnname_GT", "Y");
            } else {
                parms.put("AND_pstnname_GT", "Y");
            }
            parms.put("pstnname", example.getPstnname());
            break;
        case EmployeeExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_pstnname_GE", "Y");
            } else {
                parms.put("AND_pstnname_GE", "Y");
            }
            parms.put("pstnname", example.getPstnname());
            break;
        case EmployeeExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_pstnname_LT", "Y");
            } else {
                parms.put("AND_pstnname_LT", "Y");
            }
            parms.put("pstnname", example.getPstnname());
            break;
        case EmployeeExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_pstnname_LE", "Y");
            } else {
                parms.put("AND_pstnname_LE", "Y");
            }
            parms.put("pstnname", example.getPstnname());
            break;
        case EmployeeExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_pstnname_LIKE", "Y");
            } else {
                parms.put("AND_pstnname_LIKE", "Y");
            }
            parms.put("pstnname", example.getPstnname());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table employee
     *
     * @abatorgenerated Mon Oct 13 14:44:28 JST 2014
     */
    private Map getlayercodeExampleParms(EmployeeExample example) {
        Map parms = new HashMap();
        switch (example.getLayercode_Indicator()) {
        case EmployeeExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_layercode_NULL", "Y");
            } else {
                parms.put("AND_layercode_NULL", "Y");
            }
            break;
        case EmployeeExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_layercode_NOT_NULL", "Y");
            } else {
                parms.put("AND_layercode_NOT_NULL", "Y");
            }
            break;
        case EmployeeExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_layercode_EQUALS", "Y");
            } else {
                parms.put("AND_layercode_EQUALS", "Y");
            }
            parms.put("layercode", example.getLayercode());
            break;
        case EmployeeExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_layercode_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_layercode_NOT_EQUALS", "Y");
            }
            parms.put("layercode", example.getLayercode());
            break;
        case EmployeeExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_layercode_GT", "Y");
            } else {
                parms.put("AND_layercode_GT", "Y");
            }
            parms.put("layercode", example.getLayercode());
            break;
        case EmployeeExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_layercode_GE", "Y");
            } else {
                parms.put("AND_layercode_GE", "Y");
            }
            parms.put("layercode", example.getLayercode());
            break;
        case EmployeeExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_layercode_LT", "Y");
            } else {
                parms.put("AND_layercode_LT", "Y");
            }
            parms.put("layercode", example.getLayercode());
            break;
        case EmployeeExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_layercode_LE", "Y");
            } else {
                parms.put("AND_layercode_LE", "Y");
            }
            parms.put("layercode", example.getLayercode());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table employee
     *
     * @abatorgenerated Mon Oct 13 14:44:28 JST 2014
     */
    private Map gettrnsflagExampleParms(EmployeeExample example) {
        Map parms = new HashMap();
        switch (example.getTrnsflag_Indicator()) {
        case EmployeeExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_trnsflag_NULL", "Y");
            } else {
                parms.put("AND_trnsflag_NULL", "Y");
            }
            break;
        case EmployeeExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_trnsflag_NOT_NULL", "Y");
            } else {
                parms.put("AND_trnsflag_NOT_NULL", "Y");
            }
            break;
        case EmployeeExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_trnsflag_EQUALS", "Y");
            } else {
                parms.put("AND_trnsflag_EQUALS", "Y");
            }
            parms.put("trnsflag", example.getTrnsflag());
            break;
        case EmployeeExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_trnsflag_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_trnsflag_NOT_EQUALS", "Y");
            }
            parms.put("trnsflag", example.getTrnsflag());
            break;
        case EmployeeExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_trnsflag_GT", "Y");
            } else {
                parms.put("AND_trnsflag_GT", "Y");
            }
            parms.put("trnsflag", example.getTrnsflag());
            break;
        case EmployeeExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_trnsflag_GE", "Y");
            } else {
                parms.put("AND_trnsflag_GE", "Y");
            }
            parms.put("trnsflag", example.getTrnsflag());
            break;
        case EmployeeExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_trnsflag_LT", "Y");
            } else {
                parms.put("AND_trnsflag_LT", "Y");
            }
            parms.put("trnsflag", example.getTrnsflag());
            break;
        case EmployeeExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_trnsflag_LE", "Y");
            } else {
                parms.put("AND_trnsflag_LE", "Y");
            }
            parms.put("trnsflag", example.getTrnsflag());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table employee
     *
     * @abatorgenerated Mon Oct 13 14:44:28 JST 2014
     */
    private Map getmsnumExampleParms(EmployeeExample example) {
        Map parms = new HashMap();
        switch (example.getMsnum_Indicator()) {
        case EmployeeExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_msnum_NULL", "Y");
            } else {
                parms.put("AND_msnum_NULL", "Y");
            }
            break;
        case EmployeeExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_msnum_NOT_NULL", "Y");
            } else {
                parms.put("AND_msnum_NOT_NULL", "Y");
            }
            break;
        case EmployeeExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_msnum_EQUALS", "Y");
            } else {
                parms.put("AND_msnum_EQUALS", "Y");
            }
            parms.put("msnum", example.getMsnum());
            break;
        case EmployeeExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_msnum_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_msnum_NOT_EQUALS", "Y");
            }
            parms.put("msnum", example.getMsnum());
            break;
        case EmployeeExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_msnum_GT", "Y");
            } else {
                parms.put("AND_msnum_GT", "Y");
            }
            parms.put("msnum", example.getMsnum());
            break;
        case EmployeeExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_msnum_GE", "Y");
            } else {
                parms.put("AND_msnum_GE", "Y");
            }
            parms.put("msnum", example.getMsnum());
            break;
        case EmployeeExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_msnum_LT", "Y");
            } else {
                parms.put("AND_msnum_LT", "Y");
            }
            parms.put("msnum", example.getMsnum());
            break;
        case EmployeeExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_msnum_LE", "Y");
            } else {
                parms.put("AND_msnum_LE", "Y");
            }
            parms.put("msnum", example.getMsnum());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table employee
     *
     * @abatorgenerated Mon Oct 13 14:44:28 JST 2014
     */
    private Map getnw_idExampleParms(EmployeeExample example) {
        Map parms = new HashMap();
        switch (example.getNwId_Indicator()) {
        case EmployeeExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_nw_id_NULL", "Y");
            } else {
                parms.put("AND_nw_id_NULL", "Y");
            }
            break;
        case EmployeeExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_nw_id_NOT_NULL", "Y");
            } else {
                parms.put("AND_nw_id_NOT_NULL", "Y");
            }
            break;
        case EmployeeExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_nw_id_EQUALS", "Y");
            } else {
                parms.put("AND_nw_id_EQUALS", "Y");
            }
            parms.put("nwId", example.getNwId());
            break;
        case EmployeeExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_nw_id_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_nw_id_NOT_EQUALS", "Y");
            }
            parms.put("nwId", example.getNwId());
            break;
        case EmployeeExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_nw_id_GT", "Y");
            } else {
                parms.put("AND_nw_id_GT", "Y");
            }
            parms.put("nwId", example.getNwId());
            break;
        case EmployeeExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_nw_id_GE", "Y");
            } else {
                parms.put("AND_nw_id_GE", "Y");
            }
            parms.put("nwId", example.getNwId());
            break;
        case EmployeeExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_nw_id_LT", "Y");
            } else {
                parms.put("AND_nw_id_LT", "Y");
            }
            parms.put("nwId", example.getNwId());
            break;
        case EmployeeExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_nw_id_LE", "Y");
            } else {
                parms.put("AND_nw_id_LE", "Y");
            }
            parms.put("nwId", example.getNwId());
            break;
        case EmployeeExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_nw_id_LIKE", "Y");
            } else {
                parms.put("AND_nw_id_LIKE", "Y");
            }
            parms.put("nwId", example.getNwId());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table employee
     *
     * @abatorgenerated Mon Oct 13 14:44:28 JST 2014
     */
    private Map getExampleParms(EmployeeExample example) {
        Map parms = new HashMap();
        parms.putAll(getidExampleParms(example));
        parms.putAll(getnameExampleParms(example));
        parms.putAll(getdeptcodeExampleParms(example));
        parms.putAll(getdeptnameExampleParms(example));
        parms.putAll(getunitcodeExampleParms(example));
        parms.putAll(getunitnameExampleParms(example));
        parms.putAll(getpstncodeExampleParms(example));
        parms.putAll(getpstnnameExampleParms(example));
        parms.putAll(getlayercodeExampleParms(example));
        parms.putAll(gettrnsflagExampleParms(example));
        parms.putAll(getmsnumExampleParms(example));
        parms.putAll(getnw_idExampleParms(example));
        return parms;
    }
}